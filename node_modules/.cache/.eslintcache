[{"/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/index.js":"1","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/reportWebVitals.js":"2","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/App.js":"3","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/component/Header/app.js":"4","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/component/Register/Register.js":"5","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/api/axios.js":"6","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/component/Login/Login.js":"7","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/pages/auth/LoginPage.js":"8","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/pages/auth/RegisterPage.js":"9","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/component/PostComponent.js":"10","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/pages/HomePage.js":"11","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/component/PostContainer.js":"12","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/component/CreatePost.js":"13","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/component/SideBar.js":"14","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/service/postService.js":"15","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/service/apiService.js":"16","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/service/authService.js":"17"},{"size":1070,"mtime":1679984231904,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1678775234490,"results":"20","hashOfConfig":"19"},{"size":337,"mtime":1679987458110,"results":"21","hashOfConfig":"19"},{"size":310,"mtime":1679984231901,"results":"22","hashOfConfig":"19"},{"size":8968,"mtime":1679988226194,"results":"23","hashOfConfig":"19"},{"size":100,"mtime":1679294791017,"results":"24","hashOfConfig":"19"},{"size":4830,"mtime":1679988776845,"results":"25","hashOfConfig":"19"},{"size":330,"mtime":1679984231905,"results":"26","hashOfConfig":"19"},{"size":348,"mtime":1679984231905,"results":"27","hashOfConfig":"19"},{"size":1990,"mtime":1680001517951,"results":"28","hashOfConfig":"19"},{"size":604,"mtime":1680023098827,"results":"29","hashOfConfig":"19"},{"size":749,"mtime":1679984231903,"results":"30","hashOfConfig":"19"},{"size":3230,"mtime":1680023978061,"results":"31","hashOfConfig":"19"},{"size":636,"mtime":1680023080208,"results":"32","hashOfConfig":"19"},{"size":927,"mtime":1680001463694,"results":"33","hashOfConfig":"19"},{"size":182,"mtime":1679988270117,"results":"34","hashOfConfig":"19"},{"size":675,"mtime":1679988440502,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},"10h91fe",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"40"},"/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/index.js",["94","95","96"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Login from './component/Login/Login';\nimport Register from './component/Register/Register';\nimport Header from './component/Header/app';\nimport LoginPage from './pages/auth/LoginPage';\nimport RegisterPage from './pages/auth/RegisterPage';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n          <Route index element={<App />} />\n          <Route path=\"register\" element={<RegisterPage />} />\n          <Route path=\"login\" element={<LoginPage />} />\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/reportWebVitals.js",[],[],"/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/App.js",["97","98","99"],[],"import './App.css';\nimport Header from './component/Header/app';\nimport HomePage from './pages/HomePage';\nimport PostComponent from './component/PostComponent';\nimport PostContainer from './component/PostContainer';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/component/Header/app.js",[],[],"/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/component/Register/Register.js",["100","101","102","103","104","105","106","107","108","109","110"],[],"import { useRef, useState, useEffect } from \"react\";\nimport authService from \"../../service/authService\";\n\n\n\nimport {\n  faCheck,\n  faTimes,\n  faInfoCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"../../api/axios\";\nimport \"./style.css\";\nimport Login from '../Login/Login';\nimport { Link } from \"react-router-dom\";\n\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\nconst EMAIL_REGEX = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n\nconst Register = () => {\n  const userRef = useRef();\n  const errRef = useRef();\n\n  const [name, setName] = useState(\"\");\n  const [nameFocus, setNameFocus] = useState(false);\n\n  const [username, setUserName] = useState(\"\");\n  const [userNameFocus, setUserNameFocus] = useState(false);\n\n  const [email, setEmail] = useState(\"\");\n  const [validEmail, setValidEmail] = useState(false);\n  const [emailFocus, setEmailFocus] = useState(false);\n\n  const [age, setAge] = useState(\"\");\n  const [ageFocus, setAgeFocus] = useState(false);\n\n  const [gender, setGender] = useState(\"\");\n  const [genderFocus, setGenderFocus] = useState(false);\n\n  const [password, setPassword] = useState(\"\");\n  const [validPassword, setValidPassword] = useState(false);\n  const [passwordFocus, setPasswordFocus] = useState(false);\n\n  const [matchPassword, setMatchPassword] = useState(\"\");\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    setValidEmail(EMAIL_REGEX.test(email));\n  }, [email]);\n\n  useEffect(() => {\n    setValidPassword(PWD_REGEX.test(password));\n    setValidMatch(password === matchPassword);\n  }, [password, matchPassword]);\n\n  useEffect(() => {\n    setErrMsg(\"\");\n  }, [name, username, email, age, gender, password, matchPassword]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const v1 = PWD_REGEX.test(password);\n    const v2 = EMAIL_REGEX.test(email);\n    if (!v1 || !v2) {\n      setErrMsg(\"Invalid Entry\");\n      return;\n    }\n\n    const user = { name, username, email, age, gender, password };\n    var bodyFormData = new FormData();\n    \n    for (const key in user) {\n      if (user.hasOwnProperty(key)) {\n        bodyFormData.append(`${key}`, user[key]);\n      }\n    }\n  \n    try {\n \n\n   \n\n     const response = authService.signUpRequests(bodyFormData);\n\n      console.log(response.data);\n      console.log(response.accessToken);\n      console.log(JSON.stringify(response));\n      setSuccess(true);\n\n      setName(\"\");\n      setUserName(\"\");\n      setEmail(\"\");\n      setAge(\"\");\n      setGender(\"\");\n      setPassword(\"\");\n      setMatchPassword(\"\");\n    } catch (err) {\n      if (!err?.response) {\n        setErrMsg(\"No Server Response\");\n      } else if (err.response?.status === 409) {\n        setErrMsg(\"User Details Taken\");\n      } else {\n        setErrMsg(\"Registration Failed\");\n      }\n\n    }\n  };\n\n  return (\n    <>\n      {success ? (\n        <div className=\"w-full max-w-md min-h-sm flex flex-col justify-start p-2 m-4 rounded-md bg-gray-300\">\n          <h1>Success!</h1>\n          <p>\n            <a href=\"#\">Sign In</a>\n          </p>\n        </div>\n      ) : (\n        <div className=\"w-full max-w-md min-h-sm flex flex-col justify-start p-2 m-4 rounded-md bg-gray-300\">\n          <h1>Register</h1>\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"name\" className=\" inline\">Name:</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              ref={userRef}\n              autoComplete=\"off\"\n              onChange={(e) => setName(e.target.value)}\n              value={name}\n              required\n              onFocus={() => setNameFocus(true)}\n              onBlur={() => setNameFocus(false)}\n            />\n\n            <label htmlFor=\"username\">Username:</label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              ref={userRef}\n              autoComplete=\"off\"\n              onChange={(e) => setUserName(e.target.value)}\n              value={username}\n              required\n              onFocus={() => setUserNameFocus(true)}\n              onBlur={() => setUserNameFocus(false)}\n            />\n\n            <label htmlFor=\"email\">\n              Email:\n              <FontAwesomeIcon\n                icon={faCheck}\n                className={validEmail ? \"valid\" : \"hide\"}\n              />\n              <FontAwesomeIcon\n                icon={faTimes}\n                className={validEmail ? \"hide\" : \"invalid\"}\n              />\n            </label>\n            <input\n              type=\"text\"\n              id=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              required\n              aria-invalid={validEmail ? \"false\" : \"true\"}\n              onFocus={() => setEmailFocus(true)}\n              onBlur={() => setEmailFocus(false)}\n            />\n          \n\n            <label htmlFor=\"age\">Age:</label>\n            <input\n              type=\"text\"\n              id=\"age\"\n              ref={userRef}\n              autoComplete=\"off\"\n              onChange={(e) => setAge(e.target.value)}\n              value={age}\n              required\n              onFocus={() => setAgeFocus(true)}\n              onBlur={() => setAgeFocus(false)}\n            />\n\n            <label htmlFor=\"gender\">Gender:</label>\n            <input\n              type=\"text\"\n              id=\"gender\"\n              ref={userRef}\n              autoComplete=\"off\"\n              onChange={(e) => setGender(e.target.value)}\n              value={gender}\n              required\n              onFocus={() => setGenderFocus(true)}\n              onBlur={() => setGenderFocus(false)}\n            />\n\n            <label htmlFor=\"password\">\n              Password:\n              <FontAwesomeIcon\n                icon={faCheck}\n                className={validPassword ? \"valid\" : \"hide\"}\n              />\n              <FontAwesomeIcon\n                icon={faTimes}\n                className={validPassword || !password ? \"hide\" : \"invalid\"}\n              />\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              required\n              aria-invalid={validPassword ? \"false\" : \"true\"}\n              aria-describedby=\"passwordnote\"\n              onFocus={() => setPasswordFocus(true)}\n              onBlur={() => setPasswordFocus(false)}\n            />\n            <p\n              id=\"passwordnote\"\n              className={passwordFocus && !validPassword ? \"instructions\" : \"offscreen\"}\n            >\n              <FontAwesomeIcon icon={faInfoCircle} />\n              8 to 24 characters.\n              <br />\n              Must include uppercase and lowercase letters, a number and a\n              special character.\n              <br />\n              Allowed special characters:{\" \"}\n              <span aria-label=\"exclamation mark\">!</span>{\" \"}\n              <span aria-label=\"at symbol\">@</span>{\" \"}\n              <span aria-label=\"hashtag\">#</span>{\" \"}\n              <span aria-label=\"dollar sign\">$</span>{\" \"}\n              <span aria-label=\"percent\">%</span>\n            </p>\n\n            <label htmlFor=\"confirm_password\">\n              Confirm Password:\n              <FontAwesomeIcon\n                icon={faCheck}\n                className={validMatch && matchPassword ? \"valid\" : \"hide\"}\n              />\n              <FontAwesomeIcon\n                icon={faTimes}\n                className={validMatch || !matchPassword ? \"hide\" : \"invalid\"}\n              />\n            </label>\n            <input\n              type=\"password\"\n              id=\"confirm_password\"\n              onChange={(e) => setMatchPassword(e.target.value)}\n              value={matchPassword}\n              required\n              aria-invalid={validMatch ? \"false\" : \"true\"}\n              aria-describedby=\"confirmnote\"\n              onFocus={() => setMatchFocus(true)}\n              onBlur={() => setMatchFocus(false)}\n            />\n            <p\n              id=\"confirmnote\"\n              className={\n                matchFocus && !validMatch ? \"instructions\" : \"offscreen\"\n              }\n            >\n              <FontAwesomeIcon icon={faInfoCircle} />\n              Must match the first password input field.\n            </p>\n\n            <button\n              disabled={!validEmail || !validPassword || !validMatch ? true : false}\n            >\n              Sign Up\n            </button>\n          <div className=\"w-full flex justify-center items-center\">\n          <Link to=\"/login\">Sign In</Link>\n          </div>\n          </form>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Register;\n","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/api/axios.js",[],[],"/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/component/Login/Login.js",["111","112","113","114"],[],"import { useRef, useState, useEffect } from \"react\";\nimport authService from \"../../service/authService\";\n\n\nimport {\n  faCheck,\n  faTimes,\n  faInfoCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"../../api/axios\";\nimport { Link } from \"react-router-dom\";\n// import \"./style.css\";\n\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\n// const EMAIL_REGEX = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n\nconst Login = () => {\n  const userRef = useRef();\n  const errRef = useRef();\n\n  const [username, setUserName] = useState(\"\");\n  const [userNameFocus, setUserNameFocus] = useState(false);\n\n  const [password, setPassword] = useState(\"\");\n  const [validPassword, setValidPassword] = useState(false);\n  const [passwordFocus, setPasswordFocus] = useState(false);\n\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n\n\n  useEffect(() => {\n    setValidPassword(PWD_REGEX.test(password));\n  }, [password]);\n\n  useEffect(() => {\n    setErrMsg(\"\");\n  }, [username, password]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const v1 = PWD_REGEX.test(password);\n    // const v2 = EMAIL_REGEX.test(email);\n    if (!v1 ) {\n      setErrMsg(\"Invalid Entry\");\n      return;\n    }\n\n    const user = { username, password };\n    console.log(user);\n    try {\n \n\n      const response = await authService.loginRequest(user);\n      // console.log(response.data);\n      const token = response.data.token;\n      // console.log(token);\n      localStorage.setItem(\"token\", token);\n      // console.log(JSON.stringify(response));\n      setSuccess(true);\n\n     \n      setUserName(\"\");\n      setPassword(\"\");\n      \n    } catch (err) {\n      if (!err?.response) {\n        setErrMsg(\"No Server Response\");\n      } else if (err.response?.status === 409) {\n        setErrMsg(\"User Details Taken\");\n      } else {\n        setErrMsg(\"Signin Failed\");\n      }\n\n    }\n  };\n\n  return (\n    <>\n      {success ? (\n        <div className=\"w-full max-w-md min-h-sm flex flex-col justify-start p-2 m-4 rounded-md bg-gray-300\">\n          <h1>Success! you are signed in</h1>\n         \n        </div>\n      ) : (\n        <div className=\"w-full max-w-md min-h-sm flex flex-col justify-start p-2 m-4 rounded-md bg-gray-300\">\n          <h1>Login</h1>\n          <form onSubmit={handleSubmit}>\n       \n\n            <label htmlFor=\"username\">Username:</label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              ref={userRef}\n              autoComplete=\"off\"\n              onChange={(e) => setUserName(e.target.value)}\n              value={username}\n              required\n              onFocus={() => setUserNameFocus(true)}\n              onBlur={() => setUserNameFocus(false)}\n            />\n\n            \n\n            <label htmlFor=\"password\">\n              Password:\n              <FontAwesomeIcon\n                icon={faCheck}\n                className={validPassword ? \"valid\" : \"hide\"}\n              />\n              <FontAwesomeIcon\n                icon={faTimes}\n                className={validPassword || !password ? \"hide\" : \"invalid\"}\n              />\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              required\n              aria-invalid={validPassword ? \"false\" : \"true\"}\n              aria-describedby=\"passwordnote\"\n              onFocus={() => setPasswordFocus(true)}\n              onBlur={() => setPasswordFocus(false)}\n            />\n            <p\n              id=\"passwordnote\"\n              className={passwordFocus && !validPassword ? \"instructions\" : \"offscreen\"}\n            >\n              <FontAwesomeIcon icon={faInfoCircle} />\n              8 to 24 characters.\n              <br />\n              Must include uppercase and lowercase letters, a number and a\n              special character.\n              <br />\n              Allowed special characters:{\" \"}\n              <span aria-label=\"exclamation mark\">!</span>{\" \"}\n              <span aria-label=\"at symbol\">@</span>{\" \"}\n              <span aria-label=\"hashtag\">#</span>{\" \"}\n              <span aria-label=\"dollar sign\">$</span>{\" \"}\n              <span aria-label=\"percent\">%</span>\n            </p>\n\n            \n\n            <button\n              disabled={ !validPassword  ? true : false}\n            >\n              Sign In\n            </button>\n            <div className=\"w-full flex justify-center items-center\">\n          <Link to=\"/register\">Sign up</Link>\n          </div>\n          </form>\n          \n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Login;\n","/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/pages/auth/LoginPage.js",[],[],"/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/pages/auth/RegisterPage.js",[],[],"/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/component/PostComponent.js",[],[],"/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/pages/HomePage.js",[],[],[],"/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/component/PostContainer.js",[],[],"/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/component/CreatePost.js",[],[],"/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/component/SideBar.js",["115","116"],[],"/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/service/postService.js",["117"],[],"/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/service/apiService.js",[],[],"/Users/akhattar/Downloads/java projects/Tekion-Social-App-UI/src/service/authService.js",["118"],[],"import API from \"./apiService\";\nconst REGISTER_URL = \"/api/auth/signup\";\nconst SIGNIN_URL = \"/api/auth/signin\";\n\n\n\nconst signUpRequest = async  (bodyFormData) =>{\n    const response = await API({\n    method: 'post',\n    url: REGISTER_URL,\n    data: bodyFormData,\n    headers: {\n        'Content-Type': `multipart/form-data; boundary=${bodyFormData._boundary}`,\n    },\n});\nreturn response;\n};\n\n\n\nconst loginRequest = async (user) => {\n    const response = await API.post(SIGNIN_URL, JSON.stringify(user), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n     });    \n     return response;\n  };\n\n\n\n\nexport default {\n    signUpRequest,loginRequest\n};\n",{"ruleId":"119","severity":1,"message":"120","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":13},{"ruleId":"119","severity":1,"message":"123","line":8,"column":8,"nodeType":"121","messageId":"122","endLine":8,"endColumn":16},{"ruleId":"119","severity":1,"message":"124","line":9,"column":8,"nodeType":"121","messageId":"122","endLine":9,"endColumn":14},{"ruleId":"119","severity":1,"message":"124","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"125","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":21},{"ruleId":"119","severity":1,"message":"126","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":21},{"ruleId":"119","severity":1,"message":"127","line":12,"column":8,"nodeType":"121","messageId":"122","endLine":12,"endColumn":13},{"ruleId":"119","severity":1,"message":"120","line":14,"column":8,"nodeType":"121","messageId":"122","endLine":14,"endColumn":13},{"ruleId":"128","severity":1,"message":"129","line":18,"column":27,"nodeType":"130","messageId":"131","endLine":18,"endColumn":28,"suggestions":"132"},{"ruleId":"119","severity":1,"message":"133","line":22,"column":9,"nodeType":"121","messageId":"122","endLine":22,"endColumn":15},{"ruleId":"119","severity":1,"message":"134","line":25,"column":10,"nodeType":"121","messageId":"122","endLine":25,"endColumn":19},{"ruleId":"119","severity":1,"message":"135","line":28,"column":10,"nodeType":"121","messageId":"122","endLine":28,"endColumn":23},{"ruleId":"119","severity":1,"message":"136","line":32,"column":10,"nodeType":"121","messageId":"122","endLine":32,"endColumn":20},{"ruleId":"119","severity":1,"message":"137","line":35,"column":10,"nodeType":"121","messageId":"122","endLine":35,"endColumn":18},{"ruleId":"119","severity":1,"message":"138","line":38,"column":10,"nodeType":"121","messageId":"122","endLine":38,"endColumn":21},{"ruleId":"119","severity":1,"message":"139","line":48,"column":10,"nodeType":"121","messageId":"122","endLine":48,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":123,"column":13,"nodeType":"142","endLine":123,"endColumn":25},{"ruleId":"119","severity":1,"message":"127","line":11,"column":8,"nodeType":"121","messageId":"122","endLine":11,"endColumn":13},{"ruleId":"119","severity":1,"message":"133","line":20,"column":9,"nodeType":"121","messageId":"122","endLine":20,"endColumn":15},{"ruleId":"119","severity":1,"message":"135","line":23,"column":10,"nodeType":"121","messageId":"122","endLine":23,"endColumn":23},{"ruleId":"119","severity":1,"message":"139","line":29,"column":10,"nodeType":"121","messageId":"122","endLine":29,"endColumn":16},{"ruleId":"119","severity":1,"message":"143","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":18},{"ruleId":"144","severity":2,"message":"145","line":19,"column":69,"nodeType":"121","messageId":"146","endLine":19,"endColumn":87},{"ruleId":"147","severity":1,"message":"148","line":45,"column":1,"nodeType":"149","endLine":47,"endColumn":3},{"ruleId":"147","severity":1,"message":"148","line":33,"column":1,"nodeType":"149","endLine":35,"endColumn":3},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.","'Header' is defined but never used.","'PostComponent' is defined but never used.","'PostContainer' is defined but never used.","'axios' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["150","151"],"'errRef' is assigned a value but never used.","'nameFocus' is assigned a value but never used.","'userNameFocus' is assigned a value but never used.","'emailFocus' is assigned a value but never used.","'ageFocus' is assigned a value but never used.","'genderFocus' is assigned a value but never used.","'errMsg' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'CreatePost' is defined but never used.","no-undef","'loadCreatePostForm' is not defined.","undef","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"messageId":"152","fix":"153","desc":"154"},{"messageId":"155","fix":"156","desc":"157"},"removeEscape",{"range":"158","text":"159"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"160","text":"161"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[506,507],"",[506,506],"\\"]